import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

# Load dataset
df = pd.read_csv('women_clothing_reviews.csv')

# Drop rows with missing values in 'review_text' or 'sentiment'
df = df.dropna(subset=['review_text', 'sentiment'])

# Text vectorization
vectorizer = CountVectorizer(stop_words='english')
X = vectorizer.fit_transform(df['review_text'])
y = df['sentiment']

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model training
model = MultinomialNB()
model.fit(X_train, y_train)

# Model evaluation
y_pred = model.predict(X_test)

# Print accuracy
print(f'Accuracy: {accuracy_score(y_test, y_pred)}')

# Print classification report
print(classification_report(y_test, y_pred))

# Example usage: Predict sentiment of new reviews
new_reviews = ["I love this dress, it fits perfectly!", "The material is poor and the size is not accurate."]
new_reviews_transformed = vectorizer.transform(new_reviews)
predictions = model.predict(new_reviews_transformed)
print(f'Predictions: {predictions}')
